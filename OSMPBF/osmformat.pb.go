// Code generated by protoc-gen-go. DO NOT EDIT.
// source: osmformat.proto

package OSMPBF

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Relation_MemberType int32

const (
	Relation_NODE     Relation_MemberType = 0
	Relation_WAY      Relation_MemberType = 1
	Relation_RELATION Relation_MemberType = 2
)

var Relation_MemberType_name = map[int32]string{
	0: "NODE",
	1: "WAY",
	2: "RELATION",
}

var Relation_MemberType_value = map[string]int32{
	"NODE":     0,
	"WAY":      1,
	"RELATION": 2,
}

func (x Relation_MemberType) Enum() *Relation_MemberType {
	p := new(Relation_MemberType)
	*p = x
	return p
}

func (x Relation_MemberType) String() string {
	return proto.EnumName(Relation_MemberType_name, int32(x))
}

func (x *Relation_MemberType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Relation_MemberType_value, data, "Relation_MemberType")
	if err != nil {
		return err
	}
	*x = Relation_MemberType(value)
	return nil
}

func (Relation_MemberType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{8, 0}
}

type HeaderBlock struct {
	Bbox *HeaderBBox `protobuf:"bytes,1,opt,name=bbox" json:"bbox,omitempty"`
	// Additional tags to aid in parsing this dataset
	RequiredFeatures []string `protobuf:"bytes,4,rep,name=required_features,json=requiredFeatures" json:"required_features,omitempty"`
	OptionalFeatures []string `protobuf:"bytes,5,rep,name=optional_features,json=optionalFeatures" json:"optional_features,omitempty"`
	Writingprogram   *string  `protobuf:"bytes,16,opt,name=writingprogram" json:"writingprogram,omitempty"`
	Source           *string  `protobuf:"bytes,17,opt,name=source" json:"source,omitempty"`
	// replication timestamp, expressed in seconds since the epoch,
	// otherwise the same value as in the "timestamp=..." field
	// in the state.txt file used by Osmosis
	OsmosisReplicationTimestamp *int64 `protobuf:"varint,32,opt,name=osmosis_replication_timestamp,json=osmosisReplicationTimestamp" json:"osmosis_replication_timestamp,omitempty"`
	// replication sequence number (sequenceNumber in state.txt)
	OsmosisReplicationSequenceNumber *int64 `protobuf:"varint,33,opt,name=osmosis_replication_sequence_number,json=osmosisReplicationSequenceNumber" json:"osmosis_replication_sequence_number,omitempty"`
	// replication base URL (from Osmosis' configuration.txt file)
	OsmosisReplicationBaseUrl *string  `protobuf:"bytes,34,opt,name=osmosis_replication_base_url,json=osmosisReplicationBaseUrl" json:"osmosis_replication_base_url,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *HeaderBlock) Reset()         { *m = HeaderBlock{} }
func (m *HeaderBlock) String() string { return proto.CompactTextString(m) }
func (*HeaderBlock) ProtoMessage()    {}
func (*HeaderBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{0}
}

func (m *HeaderBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderBlock.Unmarshal(m, b)
}
func (m *HeaderBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderBlock.Marshal(b, m, deterministic)
}
func (m *HeaderBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderBlock.Merge(m, src)
}
func (m *HeaderBlock) XXX_Size() int {
	return xxx_messageInfo_HeaderBlock.Size(m)
}
func (m *HeaderBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderBlock.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderBlock proto.InternalMessageInfo

func (m *HeaderBlock) GetBbox() *HeaderBBox {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *HeaderBlock) GetRequiredFeatures() []string {
	if m != nil {
		return m.RequiredFeatures
	}
	return nil
}

func (m *HeaderBlock) GetOptionalFeatures() []string {
	if m != nil {
		return m.OptionalFeatures
	}
	return nil
}

func (m *HeaderBlock) GetWritingprogram() string {
	if m != nil && m.Writingprogram != nil {
		return *m.Writingprogram
	}
	return ""
}

func (m *HeaderBlock) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *HeaderBlock) GetOsmosisReplicationTimestamp() int64 {
	if m != nil && m.OsmosisReplicationTimestamp != nil {
		return *m.OsmosisReplicationTimestamp
	}
	return 0
}

func (m *HeaderBlock) GetOsmosisReplicationSequenceNumber() int64 {
	if m != nil && m.OsmosisReplicationSequenceNumber != nil {
		return *m.OsmosisReplicationSequenceNumber
	}
	return 0
}

func (m *HeaderBlock) GetOsmosisReplicationBaseUrl() string {
	if m != nil && m.OsmosisReplicationBaseUrl != nil {
		return *m.OsmosisReplicationBaseUrl
	}
	return ""
}

type HeaderBBox struct {
	Left                 *int64   `protobuf:"zigzag64,1,req,name=left" json:"left,omitempty"`
	Right                *int64   `protobuf:"zigzag64,2,req,name=right" json:"right,omitempty"`
	Top                  *int64   `protobuf:"zigzag64,3,req,name=top" json:"top,omitempty"`
	Bottom               *int64   `protobuf:"zigzag64,4,req,name=bottom" json:"bottom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderBBox) Reset()         { *m = HeaderBBox{} }
func (m *HeaderBBox) String() string { return proto.CompactTextString(m) }
func (*HeaderBBox) ProtoMessage()    {}
func (*HeaderBBox) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{1}
}

func (m *HeaderBBox) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderBBox.Unmarshal(m, b)
}
func (m *HeaderBBox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderBBox.Marshal(b, m, deterministic)
}
func (m *HeaderBBox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderBBox.Merge(m, src)
}
func (m *HeaderBBox) XXX_Size() int {
	return xxx_messageInfo_HeaderBBox.Size(m)
}
func (m *HeaderBBox) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderBBox.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderBBox proto.InternalMessageInfo

func (m *HeaderBBox) GetLeft() int64 {
	if m != nil && m.Left != nil {
		return *m.Left
	}
	return 0
}

func (m *HeaderBBox) GetRight() int64 {
	if m != nil && m.Right != nil {
		return *m.Right
	}
	return 0
}

func (m *HeaderBBox) GetTop() int64 {
	if m != nil && m.Top != nil {
		return *m.Top
	}
	return 0
}

func (m *HeaderBBox) GetBottom() int64 {
	if m != nil && m.Bottom != nil {
		return *m.Bottom
	}
	return 0
}

type PrimitiveBlock struct {
	Stringtable    *StringTable      `protobuf:"bytes,1,req,name=stringtable" json:"stringtable,omitempty"`
	Primitivegroup []*PrimitiveGroup `protobuf:"bytes,2,rep,name=primitivegroup" json:"primitivegroup,omitempty"`
	// Granularity, units of nanodegrees, used to store coordinates in this block
	Granularity *int32 `protobuf:"varint,17,opt,name=granularity,def=100" json:"granularity,omitempty"`
	// Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
	LatOffset            *int64   `protobuf:"varint,19,opt,name=lat_offset,json=latOffset,def=0" json:"lat_offset,omitempty"`
	LonOffset            *int64   `protobuf:"varint,20,opt,name=lon_offset,json=lonOffset,def=0" json:"lon_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimitiveBlock) Reset()         { *m = PrimitiveBlock{} }
func (m *PrimitiveBlock) String() string { return proto.CompactTextString(m) }
func (*PrimitiveBlock) ProtoMessage()    {}
func (*PrimitiveBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{2}
}

func (m *PrimitiveBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimitiveBlock.Unmarshal(m, b)
}
func (m *PrimitiveBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimitiveBlock.Marshal(b, m, deterministic)
}
func (m *PrimitiveBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimitiveBlock.Merge(m, src)
}
func (m *PrimitiveBlock) XXX_Size() int {
	return xxx_messageInfo_PrimitiveBlock.Size(m)
}
func (m *PrimitiveBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimitiveBlock.DiscardUnknown(m)
}

var xxx_messageInfo_PrimitiveBlock proto.InternalMessageInfo

const Default_PrimitiveBlock_Granularity int32 = 100
const Default_PrimitiveBlock_LatOffset int64 = 0
const Default_PrimitiveBlock_LonOffset int64 = 0

func (m *PrimitiveBlock) GetStringtable() *StringTable {
	if m != nil {
		return m.Stringtable
	}
	return nil
}

func (m *PrimitiveBlock) GetPrimitivegroup() []*PrimitiveGroup {
	if m != nil {
		return m.Primitivegroup
	}
	return nil
}

func (m *PrimitiveBlock) GetGranularity() int32 {
	if m != nil && m.Granularity != nil {
		return *m.Granularity
	}
	return Default_PrimitiveBlock_Granularity
}

func (m *PrimitiveBlock) GetLatOffset() int64 {
	if m != nil && m.LatOffset != nil {
		return *m.LatOffset
	}
	return Default_PrimitiveBlock_LatOffset
}

func (m *PrimitiveBlock) GetLonOffset() int64 {
	if m != nil && m.LonOffset != nil {
		return *m.LonOffset
	}
	return Default_PrimitiveBlock_LonOffset
}

// Group of OSMPrimitives. All primitives in a group must be the same type.
type PrimitiveGroup struct {
	Nodes                []*Node     `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	Dense                *DenseNodes `protobuf:"bytes,2,opt,name=dense" json:"dense,omitempty"`
	Ways                 []*Way      `protobuf:"bytes,3,rep,name=ways" json:"ways,omitempty"`
	Relations            []*Relation `protobuf:"bytes,4,rep,name=relations" json:"relations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PrimitiveGroup) Reset()         { *m = PrimitiveGroup{} }
func (m *PrimitiveGroup) String() string { return proto.CompactTextString(m) }
func (*PrimitiveGroup) ProtoMessage()    {}
func (*PrimitiveGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{3}
}

func (m *PrimitiveGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimitiveGroup.Unmarshal(m, b)
}
func (m *PrimitiveGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimitiveGroup.Marshal(b, m, deterministic)
}
func (m *PrimitiveGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimitiveGroup.Merge(m, src)
}
func (m *PrimitiveGroup) XXX_Size() int {
	return xxx_messageInfo_PrimitiveGroup.Size(m)
}
func (m *PrimitiveGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimitiveGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PrimitiveGroup proto.InternalMessageInfo

func (m *PrimitiveGroup) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *PrimitiveGroup) GetDense() *DenseNodes {
	if m != nil {
		return m.Dense
	}
	return nil
}

func (m *PrimitiveGroup) GetWays() []*Way {
	if m != nil {
		return m.Ways
	}
	return nil
}

func (m *PrimitiveGroup) GetRelations() []*Relation {
	if m != nil {
		return m.Relations
	}
	return nil
}

// * String table, contains the common strings in each block.
//
// Note that we reserve index '0' as a delimiter, so the entry at that
// index in the table is ALWAYS blank and unused.
//
type StringTable struct {
	S                    []string `protobuf:"bytes,1,rep,name=s" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringTable) Reset()         { *m = StringTable{} }
func (m *StringTable) String() string { return proto.CompactTextString(m) }
func (*StringTable) ProtoMessage()    {}
func (*StringTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{4}
}

func (m *StringTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringTable.Unmarshal(m, b)
}
func (m *StringTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringTable.Marshal(b, m, deterministic)
}
func (m *StringTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringTable.Merge(m, src)
}
func (m *StringTable) XXX_Size() int {
	return xxx_messageInfo_StringTable.Size(m)
}
func (m *StringTable) XXX_DiscardUnknown() {
	xxx_messageInfo_StringTable.DiscardUnknown(m)
}

var xxx_messageInfo_StringTable proto.InternalMessageInfo

func (m *StringTable) GetS() []string {
	if m != nil {
		return m.S
	}
	return nil
}

type Node struct {
	Id *int64 `protobuf:"zigzag64,1,req,name=id" json:"id,omitempty"`
	// Parallel arrays.
	Keys                 []uint32 `protobuf:"varint,2,rep,packed,name=keys" json:"keys,omitempty"`
	Vals                 []uint32 `protobuf:"varint,3,rep,packed,name=vals" json:"vals,omitempty"`
	Lat                  *int64   `protobuf:"zigzag64,8,req,name=lat" json:"lat,omitempty"`
	Lon                  *int64   `protobuf:"zigzag64,9,req,name=lon" json:"lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{5}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Node) GetKeys() []uint32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Node) GetVals() []uint32 {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Node) GetLat() int64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

func (m *Node) GetLon() int64 {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return 0
}

type DenseNodes struct {
	Id  []int64 `protobuf:"zigzag64,1,rep,packed,name=id" json:"id,omitempty"`
	Lat []int64 `protobuf:"zigzag64,8,rep,packed,name=lat" json:"lat,omitempty"`
	Lon []int64 `protobuf:"zigzag64,9,rep,packed,name=lon" json:"lon,omitempty"`
	// Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
	KeysVals             []int32  `protobuf:"varint,10,rep,packed,name=keys_vals,json=keysVals" json:"keys_vals,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DenseNodes) Reset()         { *m = DenseNodes{} }
func (m *DenseNodes) String() string { return proto.CompactTextString(m) }
func (*DenseNodes) ProtoMessage()    {}
func (*DenseNodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{6}
}

func (m *DenseNodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DenseNodes.Unmarshal(m, b)
}
func (m *DenseNodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DenseNodes.Marshal(b, m, deterministic)
}
func (m *DenseNodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DenseNodes.Merge(m, src)
}
func (m *DenseNodes) XXX_Size() int {
	return xxx_messageInfo_DenseNodes.Size(m)
}
func (m *DenseNodes) XXX_DiscardUnknown() {
	xxx_messageInfo_DenseNodes.DiscardUnknown(m)
}

var xxx_messageInfo_DenseNodes proto.InternalMessageInfo

func (m *DenseNodes) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DenseNodes) GetLat() []int64 {
	if m != nil {
		return m.Lat
	}
	return nil
}

func (m *DenseNodes) GetLon() []int64 {
	if m != nil {
		return m.Lon
	}
	return nil
}

func (m *DenseNodes) GetKeysVals() []int32 {
	if m != nil {
		return m.KeysVals
	}
	return nil
}

type Way struct {
	Id *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Parallel arrays.
	Keys                 []uint32 `protobuf:"varint,2,rep,packed,name=keys" json:"keys,omitempty"`
	Vals                 []uint32 `protobuf:"varint,3,rep,packed,name=vals" json:"vals,omitempty"`
	Refs                 []int64  `protobuf:"zigzag64,8,rep,packed,name=refs" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Way) Reset()         { *m = Way{} }
func (m *Way) String() string { return proto.CompactTextString(m) }
func (*Way) ProtoMessage()    {}
func (*Way) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{7}
}

func (m *Way) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Way.Unmarshal(m, b)
}
func (m *Way) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Way.Marshal(b, m, deterministic)
}
func (m *Way) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Way.Merge(m, src)
}
func (m *Way) XXX_Size() int {
	return xxx_messageInfo_Way.Size(m)
}
func (m *Way) XXX_DiscardUnknown() {
	xxx_messageInfo_Way.DiscardUnknown(m)
}

var xxx_messageInfo_Way proto.InternalMessageInfo

func (m *Way) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Way) GetKeys() []uint32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Way) GetVals() []uint32 {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Way) GetRefs() []int64 {
	if m != nil {
		return m.Refs
	}
	return nil
}

type Relation struct {
	Id *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Parallel arrays.
	Keys []uint32 `protobuf:"varint,2,rep,packed,name=keys" json:"keys,omitempty"`
	Vals []uint32 `protobuf:"varint,3,rep,packed,name=vals" json:"vals,omitempty"`
	// Parallel arrays
	RolesSid             []int32               `protobuf:"varint,8,rep,packed,name=roles_sid,json=rolesSid" json:"roles_sid,omitempty"`
	Memids               []int64               `protobuf:"zigzag64,9,rep,packed,name=memids" json:"memids,omitempty"`
	Types                []Relation_MemberType `protobuf:"varint,10,rep,packed,name=types,enum=OSMPBF.Relation_MemberType" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Relation) Reset()         { *m = Relation{} }
func (m *Relation) String() string { return proto.CompactTextString(m) }
func (*Relation) ProtoMessage()    {}
func (*Relation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3bda6503776f00c, []int{8}
}

func (m *Relation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Relation.Unmarshal(m, b)
}
func (m *Relation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Relation.Marshal(b, m, deterministic)
}
func (m *Relation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Relation.Merge(m, src)
}
func (m *Relation) XXX_Size() int {
	return xxx_messageInfo_Relation.Size(m)
}
func (m *Relation) XXX_DiscardUnknown() {
	xxx_messageInfo_Relation.DiscardUnknown(m)
}

var xxx_messageInfo_Relation proto.InternalMessageInfo

func (m *Relation) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Relation) GetKeys() []uint32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Relation) GetVals() []uint32 {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Relation) GetRolesSid() []int32 {
	if m != nil {
		return m.RolesSid
	}
	return nil
}

func (m *Relation) GetMemids() []int64 {
	if m != nil {
		return m.Memids
	}
	return nil
}

func (m *Relation) GetTypes() []Relation_MemberType {
	if m != nil {
		return m.Types
	}
	return nil
}

func init() {
	proto.RegisterEnum("OSMPBF.Relation_MemberType", Relation_MemberType_name, Relation_MemberType_value)
	proto.RegisterType((*HeaderBlock)(nil), "OSMPBF.HeaderBlock")
	proto.RegisterType((*HeaderBBox)(nil), "OSMPBF.HeaderBBox")
	proto.RegisterType((*PrimitiveBlock)(nil), "OSMPBF.PrimitiveBlock")
	proto.RegisterType((*PrimitiveGroup)(nil), "OSMPBF.PrimitiveGroup")
	proto.RegisterType((*StringTable)(nil), "OSMPBF.StringTable")
	proto.RegisterType((*Node)(nil), "OSMPBF.Node")
	proto.RegisterType((*DenseNodes)(nil), "OSMPBF.DenseNodes")
	proto.RegisterType((*Way)(nil), "OSMPBF.Way")
	proto.RegisterType((*Relation)(nil), "OSMPBF.Relation")
}

func init() { proto.RegisterFile("osmformat.proto", fileDescriptor_d3bda6503776f00c) }

var fileDescriptor_d3bda6503776f00c = []byte{
	// 790 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x8e, 0xdb, 0x44,
	0x14, 0xc6, 0x71, 0xec, 0x2c, 0xc9, 0xf1, 0x36, 0x64, 0x4f, 0x57, 0xab, 0x81, 0x05, 0xad, 0x31,
	0xa2, 0xb2, 0x84, 0x88, 0x96, 0x48, 0xbd, 0xe9, 0x05, 0xa8, 0x51, 0x5b, 0x8a, 0xc4, 0xee, 0x56,
	0xb3, 0x81, 0x15, 0x17, 0x28, 0x4c, 0xe2, 0x49, 0x18, 0x3a, 0xf6, 0xb8, 0x33, 0x93, 0xb6, 0x7e,
	0x1e, 0x1e, 0x80, 0x27, 0xe3, 0x86, 0x27, 0x40, 0x33, 0xb6, 0x9b, 0xb0, 0xed, 0x15, 0xbd, 0xf3,
	0xf9, 0xbe, 0x9f, 0xcf, 0x9f, 0x99, 0x63, 0xc3, 0x47, 0xca, 0x14, 0x6b, 0xa5, 0x0b, 0x66, 0x27,
	0x95, 0x56, 0x56, 0xe1, 0xc1, 0xd5, 0xf5, 0xc5, 0xb3, 0xd9, 0x93, 0xf4, 0xcf, 0x10, 0xe2, 0xa7,
	0x9c, 0xe5, 0x5c, 0xcf, 0xa4, 0x5a, 0x3d, 0xc7, 0x7b, 0x10, 0x2d, 0x97, 0xea, 0x35, 0x09, 0x92,
	0x20, 0x8b, 0xa7, 0x38, 0x69, 0xb0, 0x49, 0x8b, 0xcc, 0xd4, 0x6b, 0xea, 0x7d, 0xfc, 0x0a, 0x8e,
	0x34, 0x7f, 0xb1, 0x15, 0x9a, 0xe7, 0x8b, 0x35, 0x67, 0x76, 0xab, 0xb9, 0x21, 0x51, 0x12, 0x66,
	0x43, 0x3a, 0xee, 0x8c, 0x27, 0xad, 0xee, 0x60, 0x55, 0x59, 0xa1, 0x4a, 0x26, 0x77, 0x70, 0xbf,
	0x81, 0x3b, 0xe3, 0x0d, 0x7c, 0x0f, 0x46, 0xaf, 0xb4, 0xb0, 0xa2, 0xdc, 0x54, 0x5a, 0x6d, 0x34,
	0x2b, 0xc8, 0x38, 0x09, 0xb2, 0x21, 0xbd, 0xa5, 0xe2, 0x09, 0x1c, 0x18, 0xb5, 0xd5, 0x2b, 0x4e,
	0x8e, 0xbc, 0xdf, 0x46, 0x38, 0x83, 0xcf, 0x94, 0x29, 0x94, 0x11, 0x66, 0xa1, 0x79, 0x25, 0xc5,
	0x8a, 0xb9, 0x02, 0x0b, 0x2b, 0x0a, 0x6e, 0x2c, 0x2b, 0x2a, 0x92, 0x24, 0x41, 0x16, 0xd2, 0xd3,
	0x16, 0xa2, 0x3b, 0x66, 0xde, 0x21, 0x78, 0x01, 0x5f, 0xbc, 0x2b, 0x87, 0xe1, 0x2f, 0xb6, 0xbc,
	0x5c, 0xf1, 0x45, 0xb9, 0x2d, 0x96, 0x5c, 0x93, 0xcf, 0x7d, 0xa6, 0xe4, 0xed, 0x4c, 0xd7, 0x2d,
	0x78, 0xe9, 0x39, 0xfc, 0x0e, 0x3e, 0x7d, 0x57, 0xba, 0x25, 0x33, 0x7c, 0xb1, 0xd5, 0x92, 0xa4,
	0x7e, 0x80, 0x8f, 0xdf, 0xce, 0x33, 0x63, 0x86, 0xff, 0xa4, 0x65, 0xfa, 0x1b, 0xc0, 0xee, 0x06,
	0x10, 0x21, 0x92, 0x7c, 0x6d, 0x49, 0x90, 0xf4, 0x32, 0xa4, 0xfe, 0x19, 0x8f, 0xa1, 0xaf, 0xc5,
	0xe6, 0x77, 0x4b, 0x7a, 0x5e, 0x6c, 0x02, 0x1c, 0x43, 0x68, 0x55, 0x45, 0x42, 0xaf, 0xb9, 0x47,
	0x77, 0x6a, 0x4b, 0x65, 0xad, 0x2a, 0x48, 0xe4, 0xc5, 0x36, 0x4a, 0xff, 0x09, 0x60, 0xf4, 0x4c,
	0x8b, 0x42, 0x58, 0xf1, 0x92, 0x37, 0xab, 0x70, 0x1f, 0x62, 0x63, 0xb5, 0x28, 0x37, 0x96, 0x2d,
	0x25, 0xf7, 0xd5, 0xe2, 0xe9, 0xdd, 0x6e, 0x23, 0xae, 0xbd, 0x35, 0x77, 0x16, 0xdd, 0xe7, 0xf0,
	0x5b, 0x18, 0x55, 0x5d, 0xa2, 0x8d, 0x56, 0xdb, 0x8a, 0xf4, 0x92, 0x30, 0x8b, 0xa7, 0x27, 0xdd,
	0x9b, 0x6f, 0xca, 0x7c, 0xef, 0x5c, 0x7a, 0x8b, 0xc6, 0x2f, 0x21, 0xde, 0x68, 0x56, 0x6e, 0x25,
	0xd3, 0xc2, 0xd6, 0xfe, 0x72, 0xfb, 0x0f, 0xc2, 0x6f, 0xce, 0xcf, 0xe9, 0xbe, 0x8e, 0x09, 0x80,
	0x64, 0x76, 0xa1, 0xd6, 0x6b, 0xc3, 0x2d, 0xb9, 0xeb, 0x6e, 0xe2, 0x41, 0x70, 0x4e, 0x87, 0x92,
	0xd9, 0x2b, 0xaf, 0x79, 0x42, 0x95, 0x1d, 0x71, 0xbc, 0x23, 0x54, 0xd9, 0x10, 0xe9, 0x5f, 0xfb,
	0x43, 0xfb, 0x6e, 0x30, 0x85, 0x7e, 0xa9, 0x72, 0x6e, 0x48, 0xe0, 0x9b, 0x3e, 0xec, 0x9a, 0xbe,
	0x54, 0x39, 0xa7, 0x8d, 0x85, 0x19, 0xf4, 0x73, 0x5e, 0x1a, 0x4e, 0x7a, 0xff, 0xfd, 0x48, 0x1e,
	0x39, 0xd1, 0x81, 0x86, 0x36, 0x00, 0x9e, 0x41, 0xf4, 0x8a, 0xd5, 0x86, 0x84, 0x3e, 0x59, 0xdc,
	0x81, 0x37, 0xac, 0xa6, 0xde, 0xc0, 0x09, 0x0c, 0x35, 0x97, 0xfe, 0xae, 0x9b, 0xcf, 0x27, 0x9e,
	0x8e, 0x3b, 0x8a, 0xb6, 0x06, 0xdd, 0x21, 0xe9, 0x29, 0xc4, 0x7b, 0x07, 0x8f, 0x87, 0x10, 0x34,
	0x9d, 0x0e, 0x69, 0x60, 0xd2, 0x3f, 0x20, 0x72, 0xd5, 0x71, 0x04, 0x3d, 0x91, 0xb7, 0xdb, 0xd1,
	0x13, 0x39, 0x9e, 0x40, 0xf4, 0x9c, 0xd7, 0xc6, 0xdf, 0xc3, 0x9d, 0x59, 0x6f, 0x1c, 0x50, 0x1f,
	0x3b, 0xfd, 0x25, 0x93, 0x4d, 0x77, 0xad, 0xee, 0x62, 0xb7, 0x35, 0x92, 0x59, 0x32, 0x68, 0xb6,
	0x46, 0x32, 0xbf, 0x47, 0x52, 0x95, 0x64, 0xd8, 0x2a, 0xaa, 0x4c, 0x0b, 0x80, 0xdd, 0xb8, 0x88,
	0x6d, 0xc5, 0x30, 0x43, 0x9f, 0xc7, 0x55, 0x3d, 0xee, 0xb2, 0x74, 0xa2, 0xcf, 0x74, 0xdc, 0x65,
	0xda, 0xa9, 0xaa, 0xc4, 0x33, 0x18, 0xba, 0x8e, 0x16, 0xbe, 0x1d, 0x48, 0xc2, 0xac, 0xef, 0xbd,
	0x81, 0x13, 0x7f, 0x66, 0xd2, 0xa4, 0xbf, 0x42, 0x78, 0xc3, 0xea, 0xbd, 0xc9, 0xc2, 0xff, 0x35,
	0xd9, 0x09, 0x44, 0x9a, 0xaf, 0xcd, 0x5e, 0x53, 0x3e, 0x4e, 0xff, 0x0e, 0x60, 0xd0, 0x1d, 0xf7,
	0x7b, 0x17, 0x39, 0x83, 0xa1, 0x56, 0x92, 0x9b, 0x85, 0x11, 0xb9, 0xaf, 0xd4, 0x0e, 0xe3, 0xc5,
	0x6b, 0x91, 0xe3, 0x27, 0x70, 0x50, 0xf0, 0x42, 0xe4, 0x66, 0xef, 0x18, 0x5a, 0x05, 0xef, 0x43,
	0xdf, 0xd6, 0x15, 0x6f, 0x4e, 0x61, 0x34, 0x3d, 0xbd, 0xbd, 0x0c, 0x93, 0x0b, 0xee, 0x7e, 0x29,
	0xf3, 0xba, 0xe2, 0xfe, 0xbd, 0x86, 0x4e, 0xbf, 0x06, 0xd8, 0x19, 0x38, 0x80, 0xe8, 0xf2, 0xea,
	0xd1, 0xe3, 0xf1, 0x07, 0xf8, 0x21, 0x84, 0x37, 0x0f, 0x7f, 0x19, 0x07, 0x78, 0x08, 0x03, 0xfa,
	0xf8, 0xc7, 0x87, 0xf3, 0x1f, 0xae, 0x2e, 0xc7, 0xbd, 0xd9, 0x11, 0xdc, 0x59, 0x69, 0x65, 0x96,
	0xf5, 0x64, 0x29, 0x4a, 0xa6, 0xeb, 0xa7, 0xe1, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x4e,
	0x08, 0x5e, 0x22, 0x06, 0x00, 0x00,
}
